From b02d5270f0e8d6e7ab22666fade5f5818e1b10f1 Mon Sep 17 00:00:00 2001
From: Tim Lunn <tim@feathertop.org>
Date: Sat, 21 Dec 2013 09:11:24 +1100
Subject: [PATCH] Revert "status: Add new brightness slider widget"

This reverts commit cb09ae5cc0fc377550d8e9d123db60ea6a2aee14.
---
 js/Makefile.am             |  1 -
 js/ui/panel.js             |  2 --
 js/ui/status/brightness.js | 68 ----------------------------------------------
 3 files changed, 71 deletions(-)
 delete mode 100644 js/ui/status/brightness.js

--- a/js/Makefile.am
+++ b/js/Makefile.am
@@ -93,7 +93,6 @@
 	ui/searchDisplay.js	\
 	ui/shellDBus.js		\
 	ui/status/accessibility.js	\
-	ui/status/brightness.js	\
 	ui/status/keyboard.js	\
 	ui/status/network.js	\
 	ui/status/power.js	\
--- a/js/ui/panel.js
+++ b/js/ui/panel.js
@@ -819,7 +819,6 @@
         this._power = new imports.ui.status.power.Indicator();
         this._rfkill = new imports.ui.status.rfkill.Indicator();
         this._volume = new imports.ui.status.volume.Indicator();
-        this._brightness = new imports.ui.status.brightness.Indicator();
         this._system = new imports.ui.status.system.Indicator();
         this._screencast = new imports.ui.status.screencast.Indicator();
 
@@ -834,7 +833,6 @@
         this._indicators.add_child(PopupMenu.unicodeArrow(St.Side.BOTTOM));
 
         this.menu.addMenuItem(this._volume.menu);
-        this.menu.addMenuItem(this._brightness.menu);
         this.menu.addMenuItem(new PopupMenu.PopupSeparatorMenuItem());
         this.menu.addMenuItem(this._network.menu);
         if (this._bluetooth) {
--- a/js/ui/status/brightness.js
+++ /dev/null
@@ -1,68 +0,0 @@
-// -*- mode: js; js-indent-level: 4; indent-tabs-mode: nil -*-
-
-const Lang = imports.lang;
-const Gio = imports.gi.Gio;
-const St = imports.gi.St;
-
-const PanelMenu = imports.ui.panelMenu;
-const PopupMenu = imports.ui.popupMenu;
-const Slider = imports.ui.slider;
-
-const BUS_NAME = 'org.gnome.SettingsDaemon.Power';
-const OBJECT_PATH = '/org/gnome/SettingsDaemon/Power';
-
-const BrightnessInterface = <interface name="org.gnome.SettingsDaemon.Power.Screen">
-<property name='Brightness' type='i' access='readwrite'/>
-</interface>;
-
-const BrightnessProxy = Gio.DBusProxy.makeProxyWrapper(BrightnessInterface);
-
-const Indicator = new Lang.Class({
-    Name: 'BrightnessIndicator',
-    Extends: PanelMenu.SystemIndicator,
-
-    _init: function() {
-        this.parent('display-brightness-symbolic');
-        this._proxy = new BrightnessProxy(Gio.DBus.session, BUS_NAME, OBJECT_PATH,
-                                          Lang.bind(this, function(proxy, error) {
-                                              if (error) {
-                                                  log(error.message);
-                                                  return;
-                                              }
-
-                                              this._proxy.connect('g-properties-changed', Lang.bind(this, this._sync));
-                                              this._sync();
-                                          }));
-
-        this._item = new PopupMenu.PopupBaseMenuItem({ activate: false });
-        this.menu.addMenuItem(this._item);
-
-        this._slider = new Slider.Slider(0);
-        this._slider.connect('value-changed', Lang.bind(this, this._sliderChanged));
-        this._slider.actor.accessible_name = _("Brightness");
-
-        let icon = new St.Icon({ icon_name: 'display-brightness-symbolic',
-                                 style_class: 'popup-menu-icon' });
-        this._item.actor.add(icon);
-        this._item.actor.add(this._slider.actor, { expand: true });
-        this._item.actor.connect('button-press-event', Lang.bind(this, function(actor, event) {
-            this._slider.startDragging(event);
-        }));
-        this._item.actor.connect('key-press-event', Lang.bind(this, function(actor, event) {
-            return this._slider.onKeyPressEvent(actor, event);
-        }));
-
-    },
-
-    _sliderChanged: function(slider, value) {
-        let percent = value * 100;
-        this._proxy.Brightness = percent;
-    },
-
-    _sync: function() {
-        let visible = this._proxy.Brightness >= 0;
-        this._item.actor.visible = visible;
-        if (visible)
-            this._slider.setValue(this._proxy.Brightness / 100.0);
-    },
-});
